{"name": "test_login", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"input[name=username1]\"}\n  (Session info: chrome=134.0.6998.177); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x00007FF607774C25+3179557]\n\t(No symbol) [0x00007FF6073D88A0]\n\t(No symbol) [0x00007FF6072691CA]\n\t(No symbol) [0x00007FF6072BFA67]\n\t(No symbol) [0x00007FF6072BFC9C]\n\t(No symbol) [0x00007FF607313627]\n\t(No symbol) [0x00007FF6072E7C6F]\n\t(No symbol) [0x00007FF6073102F3]\n\t(No symbol) [0x00007FF6072E7A03]\n\t(No symbol) [0x00007FF6072B06D0]\n\t(No symbol) [0x00007FF6072B1983]\n\tGetHandleVerifier [0x00007FF6077D67CD+3579853]\n\tGetHandleVerifier [0x00007FF6077ED1D2+3672530]\n\tGetHandleVerifier [0x00007FF6077E2153+3627347]\n\tGetHandleVerifier [0x00007FF60754092A+868650]\n\t(No symbol) [0x00007FF6073E2FFF]\n\t(No symbol) [0x00007FF6073DF4A4]\n\t(No symbol) [0x00007FF6073DF646]\n\t(No symbol) [0x00007FF6073CEAA9]\n\tBaseThreadInitThunk [0x00007FFA3009E8D7+23]\n\tRtlUserThreadStart [0x00007FFA304FC34C+44]", "trace": "self = <Test_OrangeHRM.TestOrange object at 0x000002BB7932CF50>, setup = None\n\n    def test_login(self,setup):\n        self.driver.get(\"https://opensource-demo.orangehrmlive.com/\")\n        time.sleep(6)\n>       self.driver.find_element(By.CSS_SELECTOR,\"input[name=username1]\").send_keys(\"Admin\")\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\ntests\\Test_OrangeHRM.py:17: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:914: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:447: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000002BB7932E710>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...07FF6073CEAA9]\\\\n\\\\tBaseThreadInitThunk [0x00007FFA3009E8D7+23]\\\\n\\\\tRtlUserThreadStart [0x00007FFA304FC34C+44]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"input[name=username1]\"}\nE         (Session info: chrome=134.0.6998.177); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF607774C25+3179557]\nE       \t(No symbol) [0x00007FF6073D88A0]\nE       \t(No symbol) [0x00007FF6072691CA]\nE       \t(No symbol) [0x00007FF6072BFA67]\nE       \t(No symbol) [0x00007FF6072BFC9C]\nE       \t(No symbol) [0x00007FF607313627]\nE       \t(No symbol) [0x00007FF6072E7C6F]\nE       \t(No symbol) [0x00007FF6073102F3]\nE       \t(No symbol) [0x00007FF6072E7A03]\nE       \t(No symbol) [0x00007FF6072B06D0]\nE       \t(No symbol) [0x00007FF6072B1983]\nE       \tGetHandleVerifier [0x00007FF6077D67CD+3579853]\nE       \tGetHandleVerifier [0x00007FF6077ED1D2+3672530]\nE       \tGetHandleVerifier [0x00007FF6077E2153+3627347]\nE       \tGetHandleVerifier [0x00007FF60754092A+868650]\nE       \t(No symbol) [0x00007FF6073E2FFF]\nE       \t(No symbol) [0x00007FF6073DF4A4]\nE       \t(No symbol) [0x00007FF6073DF646]\nE       \t(No symbol) [0x00007FF6073CEAA9]\nE       \tBaseThreadInitThunk [0x00007FFA3009E8D7+23]\nE       \tRtlUserThreadStart [0x00007FFA304FC34C+44]\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: NoSuchElementException"}, "attachments": [{"name": "test_login", "source": "66fea8f0-ee39-408b-87a3-a1158beef991-attachment.png", "type": "image/png"}], "start": 1750785813585, "stop": 1750785823225, "uuid": "34eae5ae-99b8-435d-9222-2bc8c7da8c91", "historyId": "bac2ce7611338feb894b19e00770f30a", "testCaseId": "bac2ce7611338feb894b19e00770f30a", "fullName": "tests.Test_OrangeHRM.TestOrange#test_login", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "Test_OrangeHRM"}, {"name": "subSuite", "value": "TestOrange"}, {"name": "host", "value": "MSI"}, {"name": "thread", "value": "11220-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.Test_OrangeHRM"}]}